services:
  database:
    env_file:
      - ./.env
    image: postgres:16
    environment:
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_USER: "${DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
      
#  sql-initializer:
#    env_file:
#      - .env  # Вказуємо шлях до файлу .env
#    image: sql-initializer:latest
#    build:
#      context: ../sql-initializer
#      dockerfile: ../sql-initializer/Dockerfile
#    ports:
#      - "9080:9080"  # Відображаємо зовнішній порт 9080 на внутрішній порт 9080 контейнера
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${DATABASE_NAME}  # Використовуйте правильний порт 5432
#      SPRING_DATASOURCE_USERNAME: "${DATABASE_USERNAME}"  # Використання змінної з .env
#      SPRING_DATASOURCE_PASSWORD: "${DATABASE_PASSWORD}"  # Використання змінної з .env
#    depends_on:
#      - database
#


#  frontend:
#    build:
#      context: ../frontend/stat-frontend  # Коренева директорія фронтенду, де розташований Dockerfile
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3001"  # Зовнішній порт 3000 відображається на внутрішній порт 3001 контейнера
#
#  crm_for_bot:
#    env_file:
#      - .env  # Вказуємо шлях до файлу .env
#    image: crm_for_bot:latest
#    build:
#      context: ../crm_for_bot
#      dockerfile: ../crm_for_bot/Dockerfile
#    ports:
#      - "9000:9000"  # Відображаємо зовнішній порт 9080 на внутрішній порт 9080 контейнера
#
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${DATABASE_NAME}  # Використовуйте правильний порт 5432
#      SPRING_DATASOURCE_USERNAME: "${DATABASE_USERNAME}"  # Використання змінної з .env
#      SPRING_DATASOURCE_PASSWORD: "${DATABASE_PASSWORD}"  # Використання змінної з .env
#    depends_on:
#      - database



volumes:
  db_data:  # Зберігає дані бази даних між перезапусками контейнерів

