version: '3.8'  # Вказуємо версію docker-compose

services:
  database:
    env_file:
      - .env  # Вказуємо шлях до файлу .env
    image: postgres:14
    environment:
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_USER: "${DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
      
  sql-initializer:
    env_file:
      - .env  # Вказуємо шлях до файлу .env
    image: sql-initializer:latest
    build:
      context: ../sql-initializer
      dockerfile: ../sql-initializer/Dockerfile
    ports:
      - "9080:9080"  # Відображаємо зовнішній порт 9080 на внутрішній порт 9080 контейнера
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${DATABASE_NAME}  # Використовуйте правильний порт 5432
      SPRING_DATASOURCE_USERNAME: "${DATABASE_USERNAME}"  # Використання змінної з .env
      SPRING_DATASOURCE_PASSWORD: "${DATABASE_PASSWORD}"  # Використання змінної з .env
    depends_on:
      - database

  restservice:
    env_file:
      - .env  # Вказуємо шлях до файлу .env
    image: restservice:latest
    build:
      context: ../restService
      dockerfile: ../restService/Dockerfile
    ports:
      - "8000:8080"  # Відображаємо зовнішній порт 8000 на внутрішній порт 8080 контейнера
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${DATABASE_NAME}  # Використовуйте правильний порт 5432
      SPRING_DATASOURCE_USERNAME: "${DATABASE_USERNAME}"  # Використання змінної з .env
      SPRING_DATASOURCE_PASSWORD: "${DATABASE_PASSWORD}"  # Використання змінної з .env

    depends_on:
      - database







volumes:
  db_data:  # Зберігає дані бази даних між перезапусками контейнерів

